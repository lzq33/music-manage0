{"version":3,"sources":["webpack:///src/pages/SongPage.vue","webpack:///./src/pages/SongPage.vue?c32a","webpack:///./src/pages/SongPage.vue","webpack:///./src/assets/js/iconfont.js"],"names":["SongPage","mixins","data","singerId","singerName","centerDialogVisible","editVisible","delVisible","registerForm","name","introduction","lyric","form","id","tableData","tempData","select_word","pageSize","currentPage","idx","multipleSelection","toggle","computed","extends_default","Object","vuex_esm","this","slice","watch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","item","value","includes","push","err","return","created","$route","query","getData","destroyed","$store","commit","methods","handleCurrentChange","val","_this2","api","then","res","addSong","_this","FormData","document","getElementById","append","set","get","req","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","response","code","notify","msg","open","state","HOST","send","handleEdit","row","editSave","_this3","params","URLSearchParams","catch","console","log","uploadUrl","deleteRow","_this4","parseLyric","text","lines","split","pattern","result","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","replace","beforeSongUpload","file","substring","lastIndexOf","$message","message","type","handleSongSuccess","$notify","title","uploadSongUrl","setSongUrl","url","isPlay","pages_SongPage","render","_vm","_h","$createElement","_c","_self","staticClass","_m","_v","attrs","size","on","click","delAll","placeholder","model","callback","$$v","expression","$event","ref","staticStyle","width","border","height","selection-change","handleSelectionChange","label","align","scopedSlots","_u","key","fn","scope","src","getUrl","pic","xlink:href","_e","prop","overflow","_l","index","_s","action","before-upload","beforeAvatorUpload","on-success","handleAvatorSuccess","handleDelete","background","layout","current-page","page-size","total","length","current-change","visible","center","update:visible","label-width","slot","$set","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","a","e","n","getElementsByTagName","getAttribute","__iconfont__svg__cssinject__","write","addEventListener","indexOf","setTimeout","t","removeEventListener","attachEvent","o","i","c","d","documentElement","doScroll","createElement","innerHTML","setAttribute","style","position","firstChild","parentNode","insertBefore","appendChild","body","window"],"mappings":"0NAyIAA,GACAC,UAAA,GACAC,KAFA,WAGA,OACAC,SAAA,GACAC,WAAA,GACAC,qBAAA,EACAC,aAAA,EACAC,YAAA,EACAC,cACAC,KAAA,GACAL,WAAA,GACAM,aAAA,GACAC,MAAA,IAEAC,MACAC,GAAA,GACAJ,KAAA,GACAC,aAAA,GACAC,MAAA,IAEAG,aACAC,YACAC,YAAA,GACAC,SAAA,EACAC,YAAA,EACAC,KAAA,EACAC,qBACAC,QAAA,IAGAC,SAAAC,OACAC,OAAAC,EAAA,EAAAD,EACA,YAGAtB,KALA,WAMA,OAAAwB,KAAAZ,UAAAa,OAAAD,KAAAR,YAAA,GAAAQ,KAAAT,SAAAS,KAAAR,YAAAQ,KAAAT,aAGAW,OAEAZ,YAAA,WACA,OAAAU,KAAAV,YACAU,KAAAZ,UAAAY,KAAAX,aACA,CACAW,KAAAZ,aADA,IAAAe,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAEA,QAAAC,EAAAC,EAAAC,IAAAT,KAAAX,YAAAc,GAAAI,EAAAC,EAAAE,QAAAC,MAAAR,GAAA,OAAAS,EAAAL,EAAAM,MACAD,EAAA7B,KAAA+B,SAAAd,KAAAV,cACAU,KAAAZ,UAAA2B,KAAAH,IAJA,MAAAI,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,aAAAb,GAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,OAUAa,QAvDA,WAwDAlB,KAAAvB,SAAAuB,KAAAmB,OAAAC,MAAAjC,GACAa,KAAAtB,WAAAsB,KAAAmB,OAAAC,MAAArC,KACAiB,KAAAqB,WAEAC,UA5DA,WA6DAtB,KAAAuB,OAAAC,OAAA,iBAEAC,SAEAC,oBAFA,SAEAC,GACA3B,KAAAR,YAAAmC,GAGAN,QANA,WAMA,IAAAO,EAAA5B,KACAA,KAAAX,YACAW,KAAAZ,aACYU,OAAA+B,EAAA,EAAA/B,CAAZE,KAAAvB,UAAAqD,KAAA,SAAAC,GACAH,EAAAvC,SAAA0C,EACAH,EAAAxC,UAAA2C,EACAH,EAAApC,YAAA,KAIAwC,QAhBA,WAiBA,IAAAC,EAAAjC,KACAd,EAAA,IAAAgD,SAAAC,SAAAC,eAAA,OACAlD,EAAAmD,OAAA,WAAArC,KAAAvB,UACAS,EAAAoD,IAAA,OAAAtC,KAAAtB,WAAA,IAAAQ,EAAAqD,IAAA,SACArD,EAAAqD,IAAA,UACArD,EAAAoD,IAAA,0BAEA,IAAAE,EAAA,IAAAC,eACAD,EAAAE,mBAAA,WAGA,MAAAF,EAAAG,YAAA,KAAAH,EAAAI,OAAA,CACA,IAAAb,EAAAc,KAAAC,MAAAN,EAAAO,UACAhB,EAAAiB,MACAf,EAAAZ,UACAY,EAAAnD,gBACAmD,EAAAgB,OAAAlB,EAAAmB,IAAA,YAEAjB,EAAAgB,OAAA,kBAIAT,EAAAW,KAAA,OAAAlB,EAAAV,OAAA6B,MAAAC,KAAA,gBACAb,EAAAc,KAAApE,GACA+C,EAAAtD,qBAAA,GAGA4E,WA5CA,SA4CAC,GACAxD,KAAApB,aAAA,EACAoB,KAAAd,MACAC,GAAAqE,EAAArE,GACAJ,KAAAyE,EAAAzE,KACAC,aAAAwE,EAAAxE,aACAC,MAAAuE,EAAAvE,QAIAwE,SAtDA,WAsDA,IAAAC,EAAA1D,KACA2D,EAAA,IAAAC,gBACAD,EAAAtB,OAAA,KAAArC,KAAAd,KAAAC,IACAwE,EAAAtB,OAAA,OAAArC,KAAAd,KAAAH,MACA4E,EAAAtB,OAAA,eAAArC,KAAAd,KAAAF,cACA2E,EAAAtB,OAAA,QAAArC,KAAAd,KAAAD,OAEYa,OAAA+B,EAAA,EAAA/B,CAAZ6D,GACA7B,KAAA,SAAAC,GACA,GAAAA,EAAAiB,MACAU,EAAArC,UACAqC,EAAAT,OAAA,mBAEAS,EAAAT,OAAA,kBAGAY,MAAA,SAAA7C,GACA8C,QAAAC,IAAA/C,KAEAhB,KAAApB,aAAA,GAGAoF,UA5EA,SA4EA7E,GACA,OAAAa,KAAAuB,OAAA6B,MAAAC,KAAA,0BAAAlE,GAGA8E,UAhFA,WAgFA,IAAAC,EAAAlE,KACYF,OAAA+B,EAAA,EAAA/B,CAAZE,KAAAP,KACAqC,KAAA,SAAAC,GACAA,GACAmC,EAAA7C,UACA6C,EAAAjB,OAAA,mBAEAiB,EAAAjB,OAAA,kBAGAY,MAAA,SAAA7C,GACA8C,QAAAC,IAAA/C,KAEAhB,KAAAnB,YAAA,GAGAsF,WAhGA,SAgGAC,GACA,IAAAC,EAAAD,EAAAE,MAAA,MACAC,EAAA,iCACAC,KAHAC,GAAA,EAAAC,GAAA,EAAAC,OAAArE,EAAA,IAIA,QAAAsE,EAAAC,EAAApE,IAAA4D,KAAAI,GAAAG,EAAAC,EAAAnE,QAAAC,MAAA8D,GAAA,OACA5D,EADA+D,EAAA/D,MACAiE,QAAAP,EAAA,IACAC,EAAAzD,KAAAF,IANA,MAAAG,GAAA0D,GAAA,EAAAC,EAAA3D,EAAA,aAAAyD,GAAAI,EAAA5D,QAAA4D,EAAA5D,SAAA,WAAAyD,EAAA,MAAAC,GAQA,OAAAH,GAGAO,iBA3GA,SA2GAC,GAEA,aADAA,EAAAjG,KAAAkG,UAAAD,EAAAjG,KAAAmG,YAAA,UAEAlF,KAAAmF,UACAC,QAAA,eACAC,KAAA,WAEA,IAKAC,kBAvHA,SAuHAvD,GAEA,GAAAA,EAAAiB,MADAhD,KAEAqB,UAFArB,KAGAuF,SACAC,MAAA,OACAH,KAAA,aALArF,KAQAuF,SACAC,MAAA,OACAH,KAAA,WAKAI,cAvIA,SAuIAtG,GACA,OAAAa,KAAAuB,OAAA6B,MAAAC,KAAA,0BAAAlE,GAGAuG,WA3IA,SA2IAC,EAAA5G,GACAiB,KAAAL,OAAAZ,EACAiB,KAAAuB,OAAAC,OAAA,SAAAxB,KAAAuB,OAAA6B,MAAAC,KAAAsC,GACA3F,KAAA4F,OACA5F,KAAAuB,OAAAC,OAAA,gBAEAxB,KAAAuB,OAAAC,OAAA,mBCtVeqE,GADEC,OAFjB,WAA0B,IAAAC,EAAA/F,KAAagG,EAAAD,EAAAE,eAA0BC,EAAAH,EAAAI,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,UAAoBL,EAAAM,GAAA,GAAAN,EAAAO,GAAA,KAAAJ,EAAA,OAAkCE,YAAA,cAAwBF,EAAA,OAAYE,YAAA,eAAyBF,EAAA,aAAkBK,OAAOlB,KAAA,UAAAmB,KAAA,QAA+BC,IAAKC,MAAAX,EAAAY,UAAoBZ,EAAAO,GAAA,UAAAP,EAAAO,GAAA,KAAAJ,EAAA,YAA8CE,YAAA,eAAAG,OAAkCC,KAAA,OAAAI,YAAA,UAAqCC,OAAQhG,MAAAkF,EAAA,YAAAe,SAAA,SAAAC,GAAiDhB,EAAAzG,YAAAyH,GAAoBC,WAAA,iBAA2BjB,EAAAO,GAAA,KAAAJ,EAAA,aAA8BK,OAAOlB,KAAA,UAAAmB,KAAA,QAA+BC,IAAKC,MAAA,SAAAO,GAAyBlB,EAAApH,qBAAA,MAAiCoH,EAAAO,GAAA,gBAAAP,EAAAO,GAAA,KAAAJ,EAAA,YAAoDgB,IAAA,gBAAAC,aAAiCC,MAAA,QAAeb,OAAQC,KAAA,OAAAa,OAAA,GAAAC,OAAA,QAAA9I,KAAAuH,EAAAvH,MAA2DiI,IAAKc,mBAAAxB,EAAAyB,yBAA8CtB,EAAA,mBAAwBK,OAAOlB,KAAA,YAAA+B,MAAA,QAAiCrB,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAOkB,MAAA,OAAAL,MAAA,MAAAM,MAAA,UAA8CC,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAC,GAAA,SAAAC,GAAiC,OAAA7B,EAAA,OAAkBE,YAAA,aAAuBF,EAAA,OAAYiB,aAAaC,MAAA,QAAeb,OAAQyB,IAAAjC,EAAAkC,OAAAF,EAAAvE,IAAA0E,UAAiCnC,EAAAO,GAAA,KAAAJ,EAAA,OAA0BE,YAAA,OAAAK,IAAuBC,MAAA,SAAAO,GAAyB,OAAAlB,EAAAL,WAAAqC,EAAAvE,IAAAmC,IAAAoC,EAAAvE,IAAAzE,UAAsDgH,EAAApG,QAAAoI,EAAAvE,IAAAzE,KAAAmH,EAAA,OAAAA,EAAA,OAAqDE,YAAA,SAAmBF,EAAA,OAAYK,OAAO4B,aAAA,uBAA8BpC,EAAAqC,KAAArC,EAAAO,GAAA,KAAAP,EAAApG,QAAAoI,EAAAvE,IAAAzE,KAAAmH,EAAA,OAAAA,EAAA,OAA8EE,YAAA,SAAmBF,EAAA,OAAYK,OAAO4B,aAAA,2BAAkCpC,EAAAqC,cAAsBrC,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAO8B,KAAA,OAAAZ,MAAA,QAAAL,MAAA,MAAAM,MAAA,YAA8D3B,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAO8B,KAAA,eAAAZ,MAAA,KAAAL,MAAA,MAAAM,MAAA,YAAmE3B,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAOkB,MAAA,KAAAC,MAAA,UAA8BC,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAC,GAAA,SAAAC,GAAiC,OAAA7B,EAAA,MAAiBiB,aAAaG,OAAA,QAAAgB,SAAA,WAAsCvC,EAAAwC,GAAAxC,EAAA5B,WAAA4D,EAAAvE,IAAAvE,OAAA,SAAA2B,EAAA4H,GAA+D,OAAAtC,EAAA,MAAgB2B,IAAAW,IAAUzC,EAAAO,GAAA,6BAAAP,EAAA0C,GAAA7H,GAAA,8BAA+E,UAAUmF,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAOkB,MAAA,OAAAC,MAAA,SAAAN,MAAA,OAA8CO,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAC,GAAA,SAAAC,GAAiC,OAAA7B,EAAA,aAAwBK,OAAOmC,OAAA3C,EAAA/B,UAAA+D,EAAAvE,IAAArE,IAAAwJ,gBAAA5C,EAAA6C,mBAAAC,aAAA9C,EAAA+C,uBAAkH5C,EAAA,aAAkBK,OAAOC,KAAA,UAAeT,EAAAO,GAAA,cAAAP,EAAAO,GAAA,KAAAJ,EAAA,MAAAH,EAAAO,GAAA,KAAAJ,EAAA,aAAwEK,OAAOmC,OAAA3C,EAAAN,cAAAsC,EAAAvE,IAAArE,IAAAwJ,gBAAA5C,EAAAhB,iBAAA8D,aAAA9C,EAAAT,qBAAkHY,EAAA,aAAkBK,OAAOC,KAAA,UAAeT,EAAAO,GAAA,qBAA4BP,EAAAO,GAAA,KAAAJ,EAAA,mBAAoCK,OAAOkB,MAAA,KAAAL,MAAA,MAAAM,MAAA,UAA4CC,YAAA5B,EAAA6B,KAAsBC,IAAA,UAAAC,GAAA,SAAAC,GAAiC,OAAA7B,EAAA,aAAwBK,OAAOC,KAAA,QAAcC,IAAKC,MAAA,SAAAO,GAAyB,OAAAlB,EAAAxC,WAAAwE,EAAAvE,SAAmCuC,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAA6CK,OAAOC,KAAA,OAAAnB,KAAA,UAA8BoB,IAAKC,MAAA,SAAAO,GAAyB,OAAAlB,EAAAgD,aAAAhB,EAAAvE,IAAArE,QAAwC4G,EAAAO,GAAA,gBAAsB,GAAAP,EAAAO,GAAA,KAAAJ,EAAA,OAA4BE,YAAA,eAAyBF,EAAA,iBAAsBK,OAAOyC,WAAA,GAAAC,OAAA,wBAAAC,eAAAnD,EAAAvG,YAAA2J,YAAApD,EAAAxG,SAAA6J,MAAArD,EAAA3G,UAAAiK,QAAsI5C,IAAK6C,iBAAAvD,EAAArE,wBAA0C,GAAAqE,EAAAO,GAAA,KAAAJ,EAAA,aAAkCK,OAAOf,MAAA,OAAA+D,QAAAxD,EAAApH,oBAAAyI,MAAA,QAAAoC,OAAA,IAA6E/C,IAAKgD,iBAAA,SAAAxC,GAAkClB,EAAApH,oBAAAsI,MAAiCf,EAAA,WAAgBgB,IAAA,eAAAX,OAA0BM,MAAAd,EAAAjH,aAAA4K,cAAA,OAAAhB,OAAA,GAAAvJ,GAAA,QAAqE+G,EAAA,OAAAA,EAAA,SAAAH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,YAAkEK,OAAOlB,KAAA,OAAAtG,KAAA,WAA6B,GAAAgH,EAAAO,GAAA,KAAAJ,EAAA,OAAAA,EAAA,SAAAH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,YAAkFK,OAAOlB,KAAA,OAAAtG,KAAA,mBAAqC,GAAAgH,EAAAO,GAAA,KAAAJ,EAAA,OAAAA,EAAA,SAAAH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,YAAkFK,OAAOlB,KAAA,WAAAtG,KAAA,YAAkC,GAAAgH,EAAAO,GAAA,KAAAJ,EAAA,OAAAA,EAAA,SAAAH,EAAAO,GAAA,UAAAP,EAAAO,GAAA,KAAAJ,EAAA,SAAiFK,OAAOlB,KAAA,OAAAtG,KAAA,cAA6BgH,EAAAO,GAAA,KAAAJ,EAAA,QAA6BK,OAAOoD,KAAA,UAAgBA,KAAA,WAAezD,EAAA,aAAkBK,OAAOC,KAAA,QAAcC,IAAKC,MAAA,SAAAO,GAAyBlB,EAAApH,qBAAA,MAAkCoH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAA6CK,OAAOC,KAAA,QAAcC,IAAKC,MAAAX,EAAA/D,WAAqB+D,EAAAO,GAAA,gBAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAAqDK,OAAOf,MAAA,OAAA+D,QAAAxD,EAAAnH,YAAAwI,MAAA,QAAAoC,OAAA,IAAqE/C,IAAKgD,iBAAA,SAAAxC,GAAkClB,EAAAnH,YAAAqI,MAAyBf,EAAA,WAAgBgB,IAAA,OAAAX,OAAkBM,MAAAd,EAAA7G,KAAAwK,cAAA,UAAuCxD,EAAA,gBAAqBK,OAAO8B,KAAA,OAAAZ,MAAA,QAAAjB,KAAA,UAA6CN,EAAA,YAAiBK,OAAOK,YAAA,SAAsBC,OAAQhG,MAAAkF,EAAA7G,KAAA,KAAA4H,SAAA,SAAAC,GAA+ChB,EAAA6D,KAAA7D,EAAA7G,KAAA,OAAA6H,IAAgCC,WAAA,gBAAyB,GAAAjB,EAAAO,GAAA,KAAAJ,EAAA,gBAAqCK,OAAO8B,KAAA,eAAAZ,MAAA,KAAAjB,KAAA,UAAkDN,EAAA,YAAiBK,OAAOK,YAAA,MAAmBC,OAAQhG,MAAAkF,EAAA7G,KAAA,aAAA4H,SAAA,SAAAC,GAAuDhB,EAAA6D,KAAA7D,EAAA7G,KAAA,eAAA6H,IAAwCC,WAAA,wBAAiC,GAAAjB,EAAAO,GAAA,KAAAJ,EAAA,gBAAqCK,OAAO8B,KAAA,QAAAZ,MAAA,KAAAjB,KAAA,UAA2CN,EAAA,YAAiBK,OAAOK,YAAA,KAAAvB,KAAA,YAAqCwB,OAAQhG,MAAAkF,EAAA7G,KAAA,MAAA4H,SAAA,SAAAC,GAAgDhB,EAAA6D,KAAA7D,EAAA7G,KAAA,QAAA6H,IAAiCC,WAAA,iBAA0B,OAAAjB,EAAAO,GAAA,KAAAJ,EAAA,QAAiCK,OAAOoD,KAAA,UAAgBA,KAAA,WAAezD,EAAA,aAAkBK,OAAOC,KAAA,QAAcC,IAAKC,MAAA,SAAAO,GAAyBlB,EAAAnH,aAAA,MAA0BmH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAA6CK,OAAOC,KAAA,QAAcC,IAAKC,MAAAX,EAAAtC,YAAsBsC,EAAAO,GAAA,gBAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAAqDK,OAAOf,MAAA,OAAA+D,QAAAxD,EAAAlH,WAAAuI,MAAA,QAAAoC,OAAA,IAAoE/C,IAAKgD,iBAAA,SAAAxC,GAAkClB,EAAAlH,WAAAoI,MAAwBf,EAAA,OAAYK,OAAOmB,MAAA,YAAkB3B,EAAAO,GAAA,oBAAAP,EAAAO,GAAA,KAAAJ,EAAA,QAAoDK,OAAOoD,KAAA,UAAgBA,KAAA,WAAezD,EAAA,aAAkBK,OAAOC,KAAA,QAAcC,IAAKC,MAAA,SAAAO,GAAyBlB,EAAAlH,YAAA,MAAyBkH,EAAAO,GAAA,QAAAP,EAAAO,GAAA,KAAAJ,EAAA,aAA6CK,OAAOC,KAAA,QAAcC,IAAKC,MAAAX,EAAA9B,aAAuB8B,EAAAO,GAAA,mBAE/pMuD,iBADjB,WAAoC,IAAa7D,EAAbhG,KAAaiG,eAA0BC,EAAvClG,KAAuCmG,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,WAAqBF,EAAA,KAAUE,YAAA,oBAA/GpG,KAA6IsG,GAAA,mBCEjL,IAcAwD,EAdyBC,EAAQ,OAcjCC,CACE1L,EACAuH,GATF,EAVA,SAAAoE,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB,6BCzB/B,SAASK,GAAG,IAAIC,EAAEC,EAAE,0/BAAmlC,IAAtFD,EAAEjI,SAASmI,qBAAqB,WAAWF,EAAEf,OAAO,GAAGkB,aAAa,oBAAyBJ,EAAEK,6BAA6B,CAACL,EAAEK,8BAA6B,EAAG,IAAIrI,SAASsI,MAAM,oIAAoI,MAAML,GAAGtG,SAASA,QAAQC,IAAIqG,KAAK,SAASA,GAAG,GAAGjI,SAASuI,iBAAiB,KAAK,WAAW,SAAS,eAAeC,QAAQxI,SAASQ,YAAYiI,WAAWR,EAAE,OAAO,CAA6EjI,SAASuI,iBAAiB,mBAAhG,SAAFG,IAAa1I,SAAS2I,oBAAoB,mBAAmBD,GAAE,GAAIT,MAAoD,QAASjI,SAAS4I,cAAcC,EAAEZ,EAAEa,EAAEd,EAAEhI,SAAS+I,GAAE,GAAIC,EAAE,WAAW,IAAIF,EAAEG,gBAAgBC,SAAS,QAAQ,MAAMjB,GAAG,YAAYQ,WAAWO,EAAE,IAAId,QAAQY,EAAEvI,mBAAmB,WAAW,YAAYuI,EAAEtI,aAAasI,EAAEvI,mBAAmB,KAAK2H,OAAO,SAASA,IAAIa,IAAIA,GAAE,EAAGF,KAAK,IAAIA,EAAEC,EAAEC,EAAEC,EAAxhB,CAA2hB,WAAW,IAAIf,EAAES,GAAGT,EAAEjI,SAASmJ,cAAc,QAAQC,UAAUlB,EAAEA,EAAE,MAAMQ,EAAET,EAAEE,qBAAqB,OAAO,MAAMO,EAAEW,aAAa,cAAc,QAAQX,EAAEY,MAAMC,SAAS,WAAWb,EAAEY,MAAMrE,MAAM,EAAEyD,EAAEY,MAAMnE,OAAO,EAAEuD,EAAEY,MAAMnD,SAAS,SAAS,SAAS8B,EAAES,GAAGA,EAAEc,WAAW,SAASvB,EAAES,GAAGA,EAAEe,WAAWC,aAAazB,EAAES,GAA1C,CAA8CT,EAAES,EAAEc,YAAYd,EAAEiB,YAAY1B,GAAvG,CAA2GS,EAAE1I,SAAS4J,SAAtuE,CAAgvEC","file":"static/js/2.68e4d5449a80d6cc885e.js","sourcesContent":["<template>\r\n    <div class=\"table\">\r\n        <div class=\"crumbs\">\r\n            <i class=\"el-icon-tickets\"></i>歌曲信息\r\n        </div>\r\n        <div class=\"container\">\r\n            <div class=\"handle-box\">\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"delAll\">批量删除</el-button>\r\n                <el-input v-model=\"select_word\" size=\"mini\" placeholder=\"请输入歌曲名\" class=\"handle-input\"></el-input>\r\n                <el-button type=\"primary\" size=\"mini\" @click=\"centerDialogVisible = true\">添加歌曲</el-button>\r\n            </div>\r\n        </div>\r\n        <el-table size=\"mini\" ref=\"multipleTable\" border style=\"width:100%\" height=\"680px\" :data=\"data\" @selection-change=\"handleSelectionChange\">\r\n            <el-table-column type=\"selection\" width=\"40\"></el-table-column>\r\n            <el-table-column label=\"歌曲图片\" width=\"110\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <div class=\"song-img\">\r\n                        <img :src=\"getUrl(scope.row.pic)\" style=\"width:100%\"/>\r\n                    </div>\r\n                    <div class=\"play\" @click=\"setSongUrl(scope.row.url,scope.row.name)\">\r\n                        <div v-if=\"toggle == scope.row.name\">\r\n                            <svg class=\"icon\">\r\n                                <use xlink:href=\"#icon-zanting\"></use>\r\n                            </svg>\r\n                        </div>\r\n                        <div v-if=\"toggle != scope.row.name\">\r\n                            <svg class=\"icon\">\r\n                                <use xlink:href=\"#icon-bofanganniu\"></use>\r\n                            </svg>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"name\" label=\"歌手-歌名\" width=\"120\" align=\"center\"></el-table-column>\r\n            <el-table-column prop=\"introduction\" label=\"专辑\" width=\"150\" align=\"center\"></el-table-column>\r\n            <el-table-column label=\"歌词\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <ul style=\"height:100px;overflow:scroll;\">\r\n                        <li v-for=\"(item,index) in parseLyric(scope.row.lyric)\" :key=\"index\">\r\n                            {{item}}\r\n                        </li>\r\n                    </ul>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"资源更新\" align=\"center\" width=\"100\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-upload :action=\"uploadUrl(scope.row.id)\" :before-upload=\"beforeAvatorUpload\" \r\n                        :on-success=\"handleAvatorSuccess\">\r\n                        <el-button size=\"mini\">更新图片</el-button>\r\n                    </el-upload>\r\n                    <br/>\r\n                    <el-upload :action=\"uploadSongUrl(scope.row.id)\" :before-upload=\"beforeSongUpload\" \r\n                        :on-success=\"handleSongSuccess\">\r\n                        <el-button size=\"mini\">更新歌曲</el-button>\r\n                    </el-upload>\r\n                </template>\r\n            </el-table-column>\r\n\r\n            <el-table-column label=\"操作\" width=\"150\" align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button size=\"mini\" @click=\"handleEdit(scope.row)\">编辑</el-button>\r\n                    <el-button size=\"mini\" type=\"danger\" @click=\"handleDelete(scope.row.id)\">删除</el-button> \r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div class=\"pagination\">\r\n            <el-pagination\r\n                background\r\n                layout = \"total,prev,pager,next\"\r\n                :current-page=\"currentPage\"\r\n                :page-size=\"pageSize\"\r\n                :total=\"tableData.length\"\r\n                @current-change=\"handleCurrentChange\"\r\n                >\r\n            </el-pagination>\r\n        </div>\r\n\r\n        <el-dialog title=\"添加歌曲\" :visible.sync=\"centerDialogVisible\" width=\"400px\" center>\r\n            <el-form :model=\"registerForm\" ref=\"registerForm\" label-width=\"80px\" action=\"\" id=\"tf\">\r\n                <div>\r\n                    <label>歌名</label>\r\n                    <el-input type=\"text\" name=\"name\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>专辑</label>\r\n                    <el-input type=\"text\" name=\"introduction\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>歌词</label>\r\n                    <el-input type=\"textarea\" name=\"lyric\"></el-input>\r\n                </div>\r\n                <div>\r\n                    <label>歌曲上传</label>\r\n                    <input type=\"file\" name=\"file\">\r\n                </div>\r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"centerDialogVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"addSong\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"修改歌曲\" :visible.sync=\"editVisible\" width=\"400px\" center>\r\n            <el-form :model=\"form\" ref=\"form\" label-width=\"80px\">\r\n                <el-form-item prop=\"name\" label=\"歌手-歌名\" size=\"mini\">\r\n                    <el-input v-model=\"form.name\" placeholder=\"歌手-歌名\"></el-input>\r\n                </el-form-item>                \r\n                <el-form-item prop=\"introduction\" label=\"专辑\" size=\"mini\">\r\n                    <el-input v-model=\"form.introduction\" placeholder=\"专辑\"></el-input>\r\n                </el-form-item> \r\n                <el-form-item prop=\"lyric\" label=\"歌词\" size=\"mini\">\r\n                    <el-input v-model=\"form.lyric\" placeholder=\"歌词\" type=\"textarea\"></el-input>\r\n                </el-form-item> \r\n                \r\n            </el-form>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"editVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"editSave\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n\r\n        <el-dialog title=\"删除歌曲\" :visible.sync=\"delVisible\" width=\"300px\" center>\r\n            <div align=\"center\">删除不可恢复，是否确定删除？</div>\r\n            <span slot=\"footer\">\r\n                <el-button size=\"mini\" @click=\"delVisible = false\">取消</el-button>\r\n                <el-button size=\"mini\" @click=\"deleteRow\">确定</el-button>                \r\n            </span>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mixin } from '../mixins/index';\r\nimport {mapGetters} from 'vuex';\r\nimport '@/assets/js/iconfont.js';\r\nimport {songOfSingerId,updateSong,delSong} from '../api/index';\r\n\r\nexport default {\r\n    mixins: [mixin],\r\n    data(){\r\n        return{\r\n            singerId: '',               //歌手id\r\n            singerName: '',             //歌手名\r\n            centerDialogVisible: false, //添加弹窗是否显示\r\n            editVisible: false,         //编辑弹窗是否显示\r\n            delVisible: false,          //删除弹窗是否显示\r\n            registerForm:{      //添加框\r\n                name: '',\r\n                singerName: '',                \r\n                introduction: '',\r\n                lyric: ''\r\n            },\r\n            form:{      //编辑框\r\n                id: '',\r\n                name: '',\r\n                introduction: '',\r\n                lyric: ''\r\n            },\r\n            tableData: [],\r\n            tempData: [],\r\n            select_word: '',\r\n            pageSize: 5,    //分页每页大小\r\n            currentPage: 1,  //当前页\r\n            idx: -1,          //当前选择项\r\n            multipleSelection: [],   //哪些项已经打勾\r\n            toggle: false           //播放器的图标状态\r\n        }\r\n    },\r\n    computed:{\r\n        ...mapGetters([\r\n            'isPlay'\r\n        ]),\r\n        //计算当前搜索结果表里的数据\r\n        data(){\r\n            return this.tableData.slice((this.currentPage - 1) * this.pageSize,this.currentPage * this.pageSize)\r\n        }\r\n    },\r\n    watch:{\r\n        //搜索框里面的内容发生变化的时候，搜索结果table列表的内容跟着它的内容发生变化\r\n        select_word: function(){\r\n            if(this.select_word == ''){\r\n                this.tableData = this.tempData;\r\n            }else{\r\n                this.tableData = [];\r\n                for(let item of this.tempData){\r\n                    if(item.name.includes(this.select_word)){\r\n                        this.tableData.push(item);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n    created(){\r\n        this.singerId = this.$route.query.id;\r\n        this.singerName = this.$route.query.name;\r\n        this.getData();\r\n    },\r\n    destroyed() {\r\n        this.$store.commit('setIsPlay',false);\r\n    },\r\n    methods:{\r\n        //获取当前页\r\n        handleCurrentChange(val){\r\n            this.currentPage = val;\r\n        },\r\n        //查询所有歌手\r\n        getData(){\r\n            this.tempData = [];\r\n            this.tableData = [];\r\n            songOfSingerId(this.singerId).then(res => {\r\n                this.tempData = res;\r\n                this.tableData = res;\r\n                this.currentPage = 1;\r\n            })\r\n        },\r\n        //添加歌手\r\n        addSong(){\r\n            let _this = this;\r\n            var form = new FormData(document.getElementById('tf'));\r\n            form.append('singerId',this.singerId);\r\n            form.set('name',this.singerName+'-'+form.get('name'));\r\n            if(!form.get('lyric')){\r\n                form.set('lyric','[00:00:00]暂无歌词');\r\n            }\r\n            var req = new XMLHttpRequest();\r\n            req.onreadystatechange = function(){\r\n                //req.readyState == 4 获取到返回的完整数据\r\n                //req.status == 200 和后台正常交互完成\r\n                if(req.readyState == 4 && req.status == 200){\r\n                    let res = JSON.parse(req.response);\r\n                    if(res.code){\r\n                        _this.getData();\r\n                        _this.registerForm = {};\r\n                        _this.notify(res.msg,'success');\r\n                    }else{\r\n                         _this.notify('保存失败','error');\r\n                    }\r\n                }\r\n            }\r\n            req.open('post',`${_this.$store.state.HOST}/song/add`,false);\r\n            req.send(form);\r\n            _this.centerDialogVisible = false;\r\n        },\r\n        //弹出编辑页面\r\n        handleEdit(row){\r\n            this.editVisible = true;\r\n            this.form = {\r\n                id: row.id,\r\n                name: row.name,\r\n                introduction: row.introduction,\r\n                lyric: row.lyric\r\n            }\r\n        },\r\n        //保存编辑页面修改的数据\r\n        editSave(){\r\n            let params = new URLSearchParams();\r\n            params.append('id',this.form.id);\r\n            params.append('name',this.form.name);\r\n            params.append('introduction',this.form.introduction);\r\n            params.append('lyric',this.form.lyric);\r\n\r\n            updateSong(params)\r\n            .then(res => {\r\n                if(res.code == 1){\r\n                    this.getData();\r\n                    this.notify(\"修改成功\",\"success\");\r\n                }else{\r\n                    this.notify(\"修改失败\",\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            this.editVisible = false;\r\n        },\r\n        //更新图片\r\n        uploadUrl(id){\r\n            return `${this.$store.state.HOST}/song/updateSongPic?id=${id}`\r\n        },\r\n        //删除一名歌手\r\n        deleteRow(){\r\n            delSong(this.idx)\r\n            .then(res => {\r\n                if(res){\r\n                    this.getData();\r\n                    this.notify(\"删除成功\",\"success\");\r\n                }else{\r\n                    this.notify(\"删除失败\",\"error\");\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n            this.delVisible = false;\r\n        },\r\n        //解析歌词\r\n        parseLyric(text){\r\n            let lines = text.split(\"\\n\");\r\n            let pattern = /\\[\\d{2}:\\d{2}.(\\d{3}|\\d{2})\\]/g;\r\n            let result = [];\r\n            for(let item of lines){\r\n                let value = item.replace(pattern,'');\r\n                result.push(value);\r\n            }\r\n            return result;\r\n        },\r\n        //上传歌曲之前的校验\r\n        beforeSongUpload(file){\r\n            var testMsg = file.name.substring(file.name.lastIndexOf('.') + 1);\r\n            if(testMsg!='mp3'){\r\n                this.$message({\r\n                    message: '上传文件只能是mp3格式',\r\n                    type: 'error'\r\n                });\r\n                return false;\r\n            }\r\n            return true;\r\n        },\r\n        //上传歌曲成功之后要做的工作\r\n        handleSongSuccess(res){\r\n            let _this = this;\r\n            if(res.code == 1){\r\n                _this.getData();\r\n                _this.$notify({\r\n                    title: '上传成功',\r\n                    type: 'success'\r\n                });\r\n            }else{\r\n                _this.$notify({\r\n                    title: '上传失败',\r\n                    type: 'error'\r\n                });\r\n            }\r\n        },\r\n        //更新歌曲url\r\n        uploadSongUrl(id){\r\n            return `${this.$store.state.HOST}/song/updateSongUrl?id=${id}`\r\n        },\r\n        //切换播放歌曲\r\n        setSongUrl(url,name) {\r\n            this.toggle = name;\r\n            this.$store.commit('setUrl',this.$store.state.HOST + url);\r\n            if(this.isPlay){\r\n                this.$store.commit('setIsPlay',false);\r\n            }else{\r\n                this.$store.commit('setIsPlay',true);\r\n            }\r\n        }\r\n    }   \r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    .handle-box{\r\n        margin-bottom: 20px;\r\n    }\r\n    .song-img{\r\n        width: 100%;\r\n        height: 80px;\r\n        border-radius: 5px;\r\n        margin-bottom: 5px;\r\n        overflow: hidden;\r\n    }\r\n    .handle-input{\r\n        width: 300px;\r\n        display: inline-block;\r\n    }\r\n    .pagination{\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n    .play {\r\n        position: absolute;\r\n        z-index: 100;\r\n        width: 80px;\r\n        height: 80px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        cursor: pointer;\r\n        top: 18px;\r\n        left: 15px;\r\n    }\r\n\r\n    .icon {\r\n        width: 2em;\r\n        height: 2em;\r\n        color: white;\r\n        fill: currentColor;\r\n        overflow: hidden;\r\n    }\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/pages/SongPage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"table\"},[_vm._m(0),_vm._v(\" \"),_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"handle-box\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":_vm.delAll}},[_vm._v(\"批量删除\")]),_vm._v(\" \"),_c('el-input',{staticClass:\"handle-input\",attrs:{\"size\":\"mini\",\"placeholder\":\"请输入歌曲名\"},model:{value:(_vm.select_word),callback:function ($$v) {_vm.select_word=$$v},expression:\"select_word\"}}),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.centerDialogVisible = true}}},[_vm._v(\"添加歌曲\")])],1)]),_vm._v(\" \"),_c('el-table',{ref:\"multipleTable\",staticStyle:{\"width\":\"100%\"},attrs:{\"size\":\"mini\",\"border\":\"\",\"height\":\"680px\",\"data\":_vm.data},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"type\":\"selection\",\"width\":\"40\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌曲图片\",\"width\":\"110\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('div',{staticClass:\"song-img\"},[_c('img',{staticStyle:{\"width\":\"100%\"},attrs:{\"src\":_vm.getUrl(scope.row.pic)}})]),_vm._v(\" \"),_c('div',{staticClass:\"play\",on:{\"click\":function($event){return _vm.setSongUrl(scope.row.url,scope.row.name)}}},[(_vm.toggle == scope.row.name)?_c('div',[_c('svg',{staticClass:\"icon\"},[_c('use',{attrs:{\"xlink:href\":\"#icon-zanting\"}})])]):_vm._e(),_vm._v(\" \"),(_vm.toggle != scope.row.name)?_c('div',[_c('svg',{staticClass:\"icon\"},[_c('use',{attrs:{\"xlink:href\":\"#icon-bofanganniu\"}})])]):_vm._e()])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"歌手-歌名\",\"width\":\"120\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"introduction\",\"label\":\"专辑\",\"width\":\"150\",\"align\":\"center\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"歌词\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('ul',{staticStyle:{\"height\":\"100px\",\"overflow\":\"scroll\"}},_vm._l((_vm.parseLyric(scope.row.lyric)),function(item,index){return _c('li',{key:index},[_vm._v(\"\\n                        \"+_vm._s(item)+\"\\n                    \")])}),0)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"资源更新\",\"align\":\"center\",\"width\":\"100\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-upload',{attrs:{\"action\":_vm.uploadUrl(scope.row.id),\"before-upload\":_vm.beforeAvatorUpload,\"on-success\":_vm.handleAvatorSuccess}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"更新图片\")])],1),_vm._v(\" \"),_c('br'),_vm._v(\" \"),_c('el-upload',{attrs:{\"action\":_vm.uploadSongUrl(scope.row.id),\"before-upload\":_vm.beforeSongUpload,\"on-success\":_vm.handleSongSuccess}},[_c('el-button',{attrs:{\"size\":\"mini\"}},[_vm._v(\"更新歌曲\")])],1)]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"label\":\"操作\",\"width\":\"150\",\"align\":\"center\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){return _vm.handleEdit(scope.row)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.handleDelete(scope.row.id)}}},[_vm._v(\"删除\")])]}}])})],1),_vm._v(\" \"),_c('div',{staticClass:\"pagination\"},[_c('el-pagination',{attrs:{\"background\":\"\",\"layout\":\"total,prev,pager,next\",\"current-page\":_vm.currentPage,\"page-size\":_vm.pageSize,\"total\":_vm.tableData.length},on:{\"current-change\":_vm.handleCurrentChange}})],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加歌曲\",\"visible\":_vm.centerDialogVisible,\"width\":\"400px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.centerDialogVisible=$event}}},[_c('el-form',{ref:\"registerForm\",attrs:{\"model\":_vm.registerForm,\"label-width\":\"80px\",\"action\":\"\",\"id\":\"tf\"}},[_c('div',[_c('label',[_vm._v(\"歌名\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"text\",\"name\":\"name\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"专辑\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"text\",\"name\":\"introduction\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"歌词\")]),_vm._v(\" \"),_c('el-input',{attrs:{\"type\":\"textarea\",\"name\":\"lyric\"}})],1),_vm._v(\" \"),_c('div',[_c('label',[_vm._v(\"歌曲上传\")]),_vm._v(\" \"),_c('input',{attrs:{\"type\":\"file\",\"name\":\"file\"}})])]),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.centerDialogVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.addSong}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"修改歌曲\",\"visible\":_vm.editVisible,\"width\":\"400px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.editVisible=$event}}},[_c('el-form',{ref:\"form\",attrs:{\"model\":_vm.form,\"label-width\":\"80px\"}},[_c('el-form-item',{attrs:{\"prop\":\"name\",\"label\":\"歌手-歌名\",\"size\":\"mini\"}},[_c('el-input',{attrs:{\"placeholder\":\"歌手-歌名\"},model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"introduction\",\"label\":\"专辑\",\"size\":\"mini\"}},[_c('el-input',{attrs:{\"placeholder\":\"专辑\"},model:{value:(_vm.form.introduction),callback:function ($$v) {_vm.$set(_vm.form, \"introduction\", $$v)},expression:\"form.introduction\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"prop\":\"lyric\",\"label\":\"歌词\",\"size\":\"mini\"}},[_c('el-input',{attrs:{\"placeholder\":\"歌词\",\"type\":\"textarea\"},model:{value:(_vm.form.lyric),callback:function ($$v) {_vm.$set(_vm.form, \"lyric\", $$v)},expression:\"form.lyric\"}})],1)],1),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.editVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.editSave}},[_vm._v(\"确定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"删除歌曲\",\"visible\":_vm.delVisible,\"width\":\"300px\",\"center\":\"\"},on:{\"update:visible\":function($event){_vm.delVisible=$event}}},[_c('div',{attrs:{\"align\":\"center\"}},[_vm._v(\"删除不可恢复，是否确定删除？\")]),_vm._v(\" \"),_c('span',{attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":function($event){_vm.delVisible = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"size\":\"mini\"},on:{\"click\":_vm.deleteRow}},[_vm._v(\"确定\")])],1)])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"crumbs\"},[_c('i',{staticClass:\"el-icon-tickets\"}),_vm._v(\"歌曲信息\\n    \")])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-4773cb18\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/SongPage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-4773cb18\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SongPage.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongPage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./SongPage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-4773cb18\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./SongPage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-4773cb18\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/SongPage.vue\n// module id = null\n// module chunks = ","/* eslint-disable */\n!function(a){var e,n='<svg><symbol id=\"icon-bofanganniu\" viewBox=\"0 0 1024 1024\"><path d=\"M927.870095 571.688039 167.320423 1014.160886C121.562471 1041.981153 61.44 1007.279555 61.44 954.218179L61.44 68.595037C63.693916 16.802233 124.631347-17.041827 171.276012 8.961322L928.382003 451.43039C974.037627 479.202079 974.037627 543.611136 927.870095 571.688039Z\"  ></path></symbol><symbol id=\"icon-zanting\" viewBox=\"0 0 1024 1024\"><path d=\"M268.97201558 114.31784297c73.21218086 0 132.56071902 59.34853814 132.56071901 132.560719v530.24287606c0 73.21218086-59.34853814 132.56071902-132.56071901 132.560719s-132.56071902-59.34853814-132.56071901-132.560719V246.87856197c0-73.21218086 59.34853814-132.56071902 132.56071901-132.560719z m486.05596884 0c73.21218086 0 132.56071902 59.34853814 132.56071901 132.560719v530.24287606c0 73.21218086-59.34853814 132.56071902-132.56071901 132.560719s-132.56071902-59.34853814-132.56071901-132.560719V246.87856197c0-73.21218086 59.34853814-132.56071902 132.56071901-132.560719z\"  ></path></symbol></svg>',t=(e=document.getElementsByTagName(\"script\"))[e.length-1].getAttribute(\"data-injectcss\");if(t&&!a.__iconfont__svg__cssinject__){a.__iconfont__svg__cssinject__=!0;try{document.write(\"<style>.svgfont {display: inline-block;width: 1em;height: 1em;fill: currentColor;vertical-align: -0.1em;font-size:16px;}</style>\")}catch(e){console&&console.log(e)}}!function(e){if(document.addEventListener)if(~[\"complete\",\"loaded\",\"interactive\"].indexOf(document.readyState))setTimeout(e,0);else{var t=function(){document.removeEventListener(\"DOMContentLoaded\",t,!1),e()};document.addEventListener(\"DOMContentLoaded\",t,!1)}else document.attachEvent&&(o=e,i=a.document,c=!1,(d=function(){try{i.documentElement.doScroll(\"left\")}catch(e){return void setTimeout(d,50)}n()})(),i.onreadystatechange=function(){\"complete\"==i.readyState&&(i.onreadystatechange=null,n())});function n(){c||(c=!0,o())}var o,i,c,d}(function(){var e,t;(e=document.createElement(\"div\")).innerHTML=n,n=null,(t=e.getElementsByTagName(\"svg\")[0])&&(t.setAttribute(\"aria-hidden\",\"true\"),t.style.position=\"absolute\",t.style.width=0,t.style.height=0,t.style.overflow=\"hidden\",function(e,t){t.firstChild?function(e,t){t.parentNode.insertBefore(e,t)}(e,t.firstChild):t.appendChild(e)}(t,document.body))})}(window);\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/js/iconfont.js"],"sourceRoot":""}